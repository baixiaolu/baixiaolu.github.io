import{_ as o,r as c,o as i,c as d,a,d as n,b as e,e as t}from"./app-RLcf5AN2.js";const l={},r=t('<h1 id="fastjson2" tabindex="-1"><a class="header-anchor" href="#fastjson2" aria-hidden="true">#</a> fastjson2</h1><p>🚄 FASTJSON2 is a Java JSON library with excellent performance.</p><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><ul><li><a href="#fastjson2">fastjson2</a><ul><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li></ul></li><li><a href="#0-fastjson-20%E4%BB%8B%E7%BB%8D">0. FASTJSON 2.0介绍</a></li><li><a href="#1-%E4%BD%BF%E7%94%A8%E5%87%86%E5%A4%87">1. 使用准备</a><ul><li><a href="#11-%E6%B7%BB%E5%8A%A0%E4%BE%9D%E8%B5%96">1.1 添加依赖</a></li><li><a href="#12-%E5%85%B6%E4%BB%96%E6%A8%A1%E5%9D%97">1.2 其他模块</a><ul><li><a href="#fastjson-v1%E5%85%BC%E5%AE%B9%E6%A8%A1%E5%9D%97"><code>Fastjson v1</code>兼容模块</a></li><li><a href="#fastjson-kotlin%E9%9B%86%E6%88%90%E6%A8%A1%E5%9D%97"><code>Fastjson Kotlin</code>集成模块</a></li><li><a href="#fastjson-extension%E6%89%A9%E5%B1%95%E6%A8%A1%E5%9D%97"><code>Fastjson Extension</code>扩展模块</a></li></ul></li></ul></li><li><a href="#2-%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8">2 简单使用</a><ul><li><a href="#21-%E5%B0%86json%E8%A7%A3%E6%9E%90%E4%B8%BAjsonobject">2.1 将<code>JSON</code>解析为<code>JSONObject</code></a></li><li><a href="#22-%E5%B0%86json%E8%A7%A3%E6%9E%90%E4%B8%BAjsonarray">2.2 将<code>JSON</code>解析为<code>JSONArray</code></a></li><li><a href="#23-%E5%B0%86json%E8%A7%A3%E6%9E%90%E4%B8%BAjava%E5%AF%B9%E8%B1%A1">2.3 将<code>JSON</code>解析为<code>Java</code>对象</a></li><li><a href="#24-%E5%B0%86java%E5%AF%B9%E8%B1%A1%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%BAjson">2.4 将<code>Java</code>对象序列化为<code>JSON</code></a></li><li><a href="#25-%E4%BD%BF%E7%94%A8jsonobjectjsonarray">2.5 使用<code>JSONObject</code>、<code>JSONArray</code></a><ul><li><a href="#251-%E8%8E%B7%E5%8F%96%E7%AE%80%E5%8D%95%E5%B1%9E%E6%80%A7">2.5.1 获取简单属性</a></li><li><a href="#252-%E8%AF%BB%E5%8F%96javabean">2.5.2 读取<code>JavaBean</code></a></li><li><a href="#253-%E8%BD%AC%E4%B8%BAjavabean">2.5.3 转为<code>JavaBean</code></a></li></ul></li><li><a href="#26-%E5%B0%86javabean%E5%AF%B9%E8%B1%A1%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%BAjson">2.6 将<code>JavaBean</code>对象序列化为<code>JSON</code></a></li></ul></li><li><a href="#3-%E8%BF%9B%E9%98%B6%E4%BD%BF%E7%94%A8">3. 进阶使用</a><ul><li><a href="#31-%E4%BD%BF%E7%94%A8jsonb">3.1 使用<code>JSONB</code></a><ul><li><a href="#311-%E5%B0%86javabean%E5%AF%B9%E8%B1%A1%E5%BA%8F%E5%88%97%E5%8C%96jsonb">3.1.1 将<code>JavaBean</code>对象序列化<code>JSONB</code></a></li><li><a href="#312-%E5%B0%86jsonb%E6%95%B0%E6%8D%AE%E8%A7%A3%E6%9E%90%E4%B8%BAjavabean">3.1.2 将<code>JSONB</code>数据解析为<code>JavaBean</code></a></li></ul></li><li><a href="#32-%E4%BD%BF%E7%94%A8jsonpath">3.2 使用<code>JSONPath</code></a><ul><li><a href="#321-%E4%BD%BF%E7%94%A8jsonpath%E8%AF%BB%E5%8F%96%E9%83%A8%E5%88%86%E6%95%B0%E6%8D%AE">3.2.1 使用<code>JSONPath</code>读取部分数据</a></li><li><a href="#322-%E4%BD%BF%E7%94%A8jsonpath%E8%AF%BB%E5%8F%96%E9%83%A8%E5%88%86byte%E7%9A%84%E6%95%B0%E6%8D%AE">3.2.2 使用<code>JSONPath</code>读取部分<code>byte[]</code>的数据</a></li><li><a href="#323-%E4%BD%BF%E7%94%A8jsonpath%E8%AF%BB%E5%8F%96%E9%83%A8%E5%88%86byte%E7%9A%84%E6%95%B0%E6%8D%AE">3.2.3 使用<code>JSONPath</code>读取部分<code>byte[]</code>的数据</a></li></ul></li></ul></li></ul><h1 id="_0-fastjson-2-0介绍" tabindex="-1"><a class="header-anchor" href="#_0-fastjson-2-0介绍" aria-hidden="true">#</a> 0. FASTJSON 2.0介绍</h1><p><code>FASTJSON v2</code>是<code>FASTJSON</code>项目的重要升级，目标是为下一个十年提供一个高性能的<code>JSON</code>库。通过同一套<code>API</code>，</p>',6),p=a("code",null,"JSON/JSONB",-1),u={href:"https://alibaba.github.io/fastjson2/jsonpath_cn",target:"_blank",rel:"noopener noreferrer"},v=a("code",null,"JSONPath",-1),b=a("li",null,"支持全量解析和部分解析。",-1),h=a("li",null,[n("支持"),a("code",null,"Java"),n("服务端、客户端"),a("code",null,"Android"),n("、大数据场景。")],-1),m=a("li",null,[n("支持"),a("code",null,"Kotlin")],-1),k=a("code",null,"JSON Schema",-1),j={href:"https://alibaba.github.io/fastjson2/json_schema_cn",target:"_blank",rel:"noopener noreferrer"},g=a("li",null,[n("支持"),a("code",null,"Android")],-1),f=a("li",null,[n("支持"),a("code",null,"Graal Native-Image")],-1),E=a("p",null,"相关文档：",-1),x=a("code",null,"JSONB",-1),_=a("br",null,null,-1),B={href:"https://alibaba.github.io/fastjson2/jsonb_format_cn",target:"_blank",rel:"noopener noreferrer"},J=a("code",null,"FASTJSON v2",-1),S=a("br",null,null,-1),O={href:"https://alibaba.github.io/fastjson2/benchmark_cn",target:"_blank",rel:"noopener noreferrer"},N=t(`<h1 id="_1-使用准备" tabindex="-1"><a class="header-anchor" href="#_1-使用准备" aria-hidden="true">#</a> 1. 使用准备</h1><h2 id="_1-1-添加依赖" tabindex="-1"><a class="header-anchor" href="#_1-1-添加依赖" aria-hidden="true">#</a> 1.1 添加依赖</h2><p>在<code>fastjson v2</code>中，<code>groupId</code>和<code>1.x</code>不一样，是<code>com.alibaba.fastjson2</code>：</p><p><code>Maven</code>:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;dependency&gt;
    &lt;groupId&gt;com.alibaba.fastjson2&lt;/groupId&gt;
    &lt;artifactId&gt;fastjson2&lt;/artifactId&gt;
    &lt;version&gt;2.0.43&lt;/version&gt;
&lt;/dependency&gt; 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Gradle</code>:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dependencies {
    implementation &#39;com.alibaba.fastjson2:fastjson2:2.0.43&#39;
} 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),A={href:"https://search.maven.org/artifact/com.alibaba.fastjson2/fastjson2",target:"_blank",rel:"noopener noreferrer"},y=t(`<h2 id="_1-2-其他模块" tabindex="-1"><a class="header-anchor" href="#_1-2-其他模块" aria-hidden="true">#</a> 1.2 其他模块</h2><h3 id="fastjson-v1兼容模块" tabindex="-1"><a class="header-anchor" href="#fastjson-v1兼容模块" aria-hidden="true">#</a> <code>Fastjson v1</code>兼容模块</h3><p>如果原来使用<code>fastjson 1.2.x</code>版本，可以使用兼容包，兼容包不能保证100%兼容，请仔细测试验证，发现问题请及时反馈。</p><p><code>Maven</code>:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;dependency&gt;
    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;
    &lt;artifactId&gt;fastjson&lt;/artifactId&gt;
    &lt;version&gt;2.0.43&lt;/version&gt;
&lt;/dependency&gt; 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Gradle</code>:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dependencies {
    implementation &#39;com.alibaba:fastjson:2.0.43&#39;
} 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fastjson-kotlin集成模块" tabindex="-1"><a class="header-anchor" href="#fastjson-kotlin集成模块" aria-hidden="true">#</a> <code>Fastjson Kotlin</code>集成模块</h3><p>如果项目使用<code>Kotlin</code>，可以使用<code>fastjson-kotlin</code>模块，使用方式上采用<code>kotlin</code>的特性。</p><p><code>Maven</code>:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;dependency&gt;
    &lt;groupId&gt;com.alibaba.fastjson2&lt;/groupId&gt;
    &lt;artifactId&gt;fastjson2-kotlin&lt;/artifactId&gt;
    &lt;version&gt;2.0.43&lt;/version&gt;
&lt;/dependency&gt; 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Gradle</code>:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dependencies {
    implementation(&quot;com.alibaba.fastjson2:fastjson2-kotlin:2.0.43&quot;)
} 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fastjson-extension扩展模块" tabindex="-1"><a class="header-anchor" href="#fastjson-extension扩展模块" aria-hidden="true">#</a> <code>Fastjson Extension</code>扩展模块</h3>`,14),F=a("code",null,"SpringFramework",-1),q=a("code",null,"fastjson-extension",-1),D={href:"https://alibaba.github.io/fastjson2/spring_support_cn",target:"_blank",rel:"noopener noreferrer"},I=t(`<p><code>Maven</code>:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;dependency&gt;
    &lt;groupId&gt;com.alibaba.fastjson2&lt;/groupId&gt;
    &lt;artifactId&gt;fastjson2-extension&lt;/artifactId&gt;
    &lt;version&gt;2.0.43&lt;/version&gt;
&lt;/dependency&gt; 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Gradle</code>:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dependencies {
    implementation &#39;com.alibaba.fastjson2:fastjson2-extension:2.0.43&#39;
} 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_2-简单使用" tabindex="-1"><a class="header-anchor" href="#_2-简单使用" aria-hidden="true">#</a> 2 简单使用</h1><p>在<code>fastjson v2</code>中，<code>package</code>和<code>1.x</code>不一样，是<code>com.alibaba.fastjson2</code>。如果你之前用的是<code>fastjson1</code>，大多数情况直接更包名就即可。</p><h3 id="_2-1-将json解析为jsonobject" tabindex="-1"><a class="header-anchor" href="#_2-1-将json解析为jsonobject" aria-hidden="true">#</a> 2.1 将<code>JSON</code>解析为<code>JSONObject</code></h3><p><code>Java</code>:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> text <span class="token operator">=</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">JSONObject</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
<span class="token class-name">JSONObject</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-将json解析为jsonarray" tabindex="-1"><a class="header-anchor" href="#_2-2-将json解析为jsonarray" aria-hidden="true">#</a> 2.2 将<code>JSON</code>解析为<code>JSONArray</code></h3><p><code>Java</code>:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> text <span class="token operator">=</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">JSONArray</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseArray</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-将json解析为java对象" tabindex="-1"><a class="header-anchor" href="#_2-3-将json解析为java对象" aria-hidden="true">#</a> 2.3 将<code>JSON</code>解析为<code>Java</code>对象</h3><p><code>Java</code>:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> text <span class="token operator">=</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">User</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-将java对象序列化为json" tabindex="-1"><a class="header-anchor" href="#_2-4-将java对象序列化为json" aria-hidden="true">#</a> 2.4 将<code>Java</code>对象序列化为<code>JSON</code></h3><p><code>Java</code>:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Object</span> data <span class="token operator">=</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> text <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> text <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONBytes</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-5-使用jsonobject、jsonarray" tabindex="-1"><a class="header-anchor" href="#_2-5-使用jsonobject、jsonarray" aria-hidden="true">#</a> 2.5 使用<code>JSONObject</code>、<code>JSONArray</code></h3><h4 id="_2-5-1-获取简单属性" tabindex="-1"><a class="header-anchor" href="#_2-5-1-获取简单属性" aria-hidden="true">#</a> 2.5.1 获取简单属性</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>String text = &quot;{\\&quot;id\\&quot;: 2,\\&quot;name\\&quot;: \\&quot;fastjson2\\&quot;}&quot;;
JSONObject obj = JSON.parseObject(text);

int id = obj.getIntValue(&quot;id&quot;);
String name = obj.getString(&quot;name&quot;); 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>String text = &quot;[2, \\&quot;fastjson2\\&quot;]&quot;;
JSONArray array = JSON.parseArray(text);

int id = array.getIntValue(0);
String name = array.getString(1); 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-5-2-读取javabean" tabindex="-1"><a class="header-anchor" href="#_2-5-2-读取javabean" aria-hidden="true">#</a> 2.5.2 读取<code>JavaBean</code></h4><p><code>Java</code>:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">JSONArray</span> array <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token class-name">JSONObject</span> obj <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token class-name">User</span> user <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">User</span> user <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-5-3-转为javabean" tabindex="-1"><a class="header-anchor" href="#_2-5-3-转为javabean" aria-hidden="true">#</a> 2.5.3 转为<code>JavaBean</code></h4><p><code>Java</code>:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">JSONArray</span> array <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token class-name">JSONObject</span> obj <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token class-name">User</span> user <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">toJavaObject</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">toJavaList</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-6-将javabean对象序列化为json" tabindex="-1"><a class="header-anchor" href="#_2-6-将javabean对象序列化为json" aria-hidden="true">#</a> 2.6 将<code>JavaBean</code>对象序列化为<code>JSON</code></h3><p><code>Java</code>:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;FastJson2&quot;</span><span class="token punctuation">;</span>

<span class="token class-name">String</span> text <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONBytes</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>序列化结果:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{  &quot;id&quot;  :  2,  &quot;name&quot;  :  &quot;FastJson2&quot;  } 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="_3-进阶使用" tabindex="-1"><a class="header-anchor" href="#_3-进阶使用" aria-hidden="true">#</a> 3. 进阶使用</h1><h3 id="_3-1-使用jsonb" tabindex="-1"><a class="header-anchor" href="#_3-1-使用jsonb" aria-hidden="true">#</a> 3.1 使用<code>JSONB</code></h3><h4 id="_3-1-1-将javabean对象序列化jsonb" tabindex="-1"><a class="header-anchor" href="#_3-1-1-将javabean对象序列化jsonb" aria-hidden="true">#</a> 3.1.1 将<code>JavaBean</code>对象序列化<code>JSONB</code></h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>User user = ...;
byte[] bytes = JSONB.toBytes(user);
byte[] bytes = JSONB.toBytes(user, JSONWriter.Feature.BeanToArray); 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-1-2-将jsonb数据解析为javabean" tabindex="-1"><a class="header-anchor" href="#_3-1-2-将jsonb数据解析为javabean" aria-hidden="true">#</a> 3.1.2 将<code>JSONB</code>数据解析为<code>JavaBean</code></h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>byte[] bytes = ...
User user = JSONB.parseObject(bytes, User.class);
User user = JSONB.parseObject(bytes, User.class, JSONReader.Feature.SupportBeanArrayMapping); 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-使用jsonpath" tabindex="-1"><a class="header-anchor" href="#_3-2-使用jsonpath" aria-hidden="true">#</a> 3.2 使用<code>JSONPath</code></h3><h4 id="_3-2-1-使用jsonpath读取部分数据" tabindex="-1"><a class="header-anchor" href="#_3-2-1-使用jsonpath读取部分数据" aria-hidden="true">#</a> 3.2.1 使用<code>JSONPath</code>读取部分数据</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>String text = ...;
JSONPath path = JSONPath.of(&quot;$.id&quot;); // 缓存起来重复使用能提升性能

JSONReader parser = JSONReader.of(text);
Object result = path.extract(parser); 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-2-使用jsonpath读取部分byte-的数据" tabindex="-1"><a class="header-anchor" href="#_3-2-2-使用jsonpath读取部分byte-的数据" aria-hidden="true">#</a> 3.2.2 使用<code>JSONPath</code>读取部分<code>byte[]</code>的数据</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>byte[] bytes = ...;
JSONPath path = JSONPath.of(&quot;$.id&quot;); // 缓存起来重复使用能提升性能

JSONReader parser = JSONReader.of(bytes);
Object result = path.extract(parser); 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-3-使用jsonpath读取部分byte-的数据" tabindex="-1"><a class="header-anchor" href="#_3-2-3-使用jsonpath读取部分byte-的数据" aria-hidden="true">#</a> 3.2.3 使用<code>JSONPath</code>读取部分<code>byte[]</code>的数据</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>byte[] bytes = ...;
JSONPath path = JSONPath.of(&quot;$.id&quot;); // 缓存起来重复使用能提升性能

JSONReader parser = JSONReader.ofJSONB(bytes); // 注意这里使用ofJSONB方法
Object result = path.extract(parser); 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,46);function U(w,P){const s=c("ExternalLinkIcon");return i(),d("div",null,[r,a("ul",null,[a("li",null,[n("支持"),p,n("两种协议，"),a("a",u,[v,e(s)]),n(" 是一等公民。")]),b,h,m,a("li",null,[n("支持"),k,n(),a("a",j,[n("https://alibaba.github.io/fastjson2/json_schema_cn"),e(s)])]),g,f]),E,a("ul",null,[a("li",null,[x,n("格式文档："),_,a("a",B,[n("https://alibaba.github.io/fastjson2/jsonb_format_cn"),e(s)])]),a("li",null,[J,n("性能有了很大提升，具体性能数据看这里："),S,a("a",O,[n("https://alibaba.github.io/fastjson2/benchmark_cn"),e(s)])])]),N,a("p",null,[n("可以在 "),a("a",A,[n("maven.org"),e(s)]),n(" 查看最新可用的版本。")]),y,a("p",null,[n("如果项目使用"),F,n("等框架，可以使用"),q,n("模块，使用方式参考 "),a("a",D,[n("SpringFramework Support"),e(s)]),n("。")]),I])}const R=o(l,[["render",U],["__file","fastjson2.html.vue"]]);export{R as default};
